all:    lex.cc parse.cc main.cc Scanner.h Scannerbase.h Scanner.ih Parser.h Parserbase.h Parser.ih
	g++   --std=c++0x lex.cc parse.cc main.cc -o lex;
	./lex<try.cpp >parser_out
	egrep 'nextToken|reduce' parser_out

lex.cc: lex.l Scanner.ih 
	flexc++ lex.l; 
	sed -i '/include/a #include "Parserbase.h"' Scanner.ih; 
	# sed -i '/int lex()/r enum1' Scanner.h

parse.cc: parse.y Parser.ih Parser.h Parserbase.h
	bisonc++  parse.y; 
#	bisonc++   --construction -V parse.y; 
#	sed -i '/ifndef/a #include "tree_util.hh"' Parserbase.h;
#	sed -i '/ifndef/a #include "tree.hh"' Parserbase.h;
#	./sedscript

Parser.ih: parse.y
Parser.h:  parse.y
Parserbase.h: parse.y
Scanner.ih: lex.l
Scanner.h: lex.l
Scannerbase.h: lex.l

clean:
	rm -f Scanner* lex.cc Parser* parse.cc lex